package main

import (
    "log"
    "{{SERVICE_NAME}}/internal/config"
    "{{SERVICE_NAME}}/internal/{{MODULE_NAME}}"
    "github.com/gin-gonic/gin"
    ginSwagger "github.com/swaggo/gin-swagger"
    swaggerFiles "github.com/swaggo/files"
    _ "{{SERVICE_NAME}}/docs/swagger" // docs is generated by Swag CLI, you have to import it.
    "gorm.io/driver/postgres"
    "gorm.io/gorm"
)

// @title        {{SERVICE_NAME}} API
// @version      1.0
// @description  This is a sample server for {{SERVICE_NAME}}.
// @host         localhost:8080
// @BasePath     /
func main() {
    config := config.Load()
    db, err := gorm.Open(postgres.Open(config.DB.DSN()), &gorm.Config{})
    if err != nil {
        log.Fatalf("failed to connect db: %v", err)
    }
    
    // Auto-migrate on startup (dev only)
    if err := db.AutoMigrate(&{{MODULE_NAME}}.{{MODULE_NAME_UPPER}}{}); err != nil {
        log.Fatalf("migrate: %v", err)
    }

    router := gin.Default()
    router.GET("/ping", func(c *gin.Context) {
        c.JSON(200, gin.H{"message": "pong"})
    })

    // Swagger endpoint
    router.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

    // USE THIS COMMENT TO AUTO-GENERATE NEW MODULES

    log.Printf("ðŸŒ± listening on :8080")
    if err := router.Run(":8080"); err != nil {
        log.Fatalf("server: %v", err)
    }
}
